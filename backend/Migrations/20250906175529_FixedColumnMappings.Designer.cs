// <auto-generated />
using System;
using GestorEncuestas_MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorEncuestas_MVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250906175529_FixedColumnMappings")]
    partial class FixedColumnMappings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Encuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int")
                        .HasColumnName("autor");

                    b.Property<DateTime>("CierraEn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("cierra_en");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creado_en");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("estado");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("titulo");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("encuestas", (string)null);
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Pregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EncuestaId")
                        .HasColumnType("int")
                        .HasColumnName("encuesta_id");

                    b.Property<string>("Enunciado")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("enunciado");

                    b.Property<bool>("Obligatorio")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("obligatorio");

                    b.Property<string>("TipoPregunta")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo_pregunta");

                    b.HasKey("Id");

                    b.HasIndex("EncuestaId");

                    b.ToTable("preguntas", (string)null);
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.PreguntaOpcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Label");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("position");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("int")
                        .HasColumnName("pregunta_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("PreguntaId");

                    b.ToTable("preguntas_opciones", (string)null);
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EncuestaId")
                        .HasColumnType("int")
                        .HasColumnName("encuesta_id");

                    b.Property<DateTime>("FechaRespuesta")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_respuesta");

                    b.Property<float?>("Numerica")
                        .HasColumnType("float")
                        .HasColumnName("respuesta_numeros");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("int")
                        .HasColumnName("pregunta_id");

                    b.Property<int?>("SeleccionOpcionId")
                        .HasColumnType("int")
                        .HasColumnName("seleccion_opcion_id");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("respuesta");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_respuesta");

                    b.HasKey("Id");

                    b.HasIndex("EncuestaId");

                    b.HasIndex("PreguntaId");

                    b.HasIndex("SeleccionOpcionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("respuestas", (string)null);
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.RespuestaOpcion", b =>
                {
                    b.Property<int>("RespuestaId")
                        .HasColumnType("int")
                        .HasColumnName("respuesta_id");

                    b.Property<int>("OpcionId")
                        .HasColumnType("int")
                        .HasColumnName("opcion");

                    b.HasKey("RespuestaId", "OpcionId");

                    b.HasIndex("OpcionId");

                    b.ToTable("respuestas_opciones", (string)null);
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RolNombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("rol");

                    b.HasKey("Id");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Passwd")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("passwd");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Encuesta", b =>
                {
                    b.HasOne("GestorEncuestas_MVC.Models.Usuario", "Autor")
                        .WithMany("EncuestasCreadas")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Pregunta", b =>
                {
                    b.HasOne("GestorEncuestas_MVC.Models.Encuesta", "Encuesta")
                        .WithMany("Preguntas")
                        .HasForeignKey("EncuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.PreguntaOpcion", b =>
                {
                    b.HasOne("GestorEncuestas_MVC.Models.Pregunta", "Pregunta")
                        .WithMany("Opciones")
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Respuesta", b =>
                {
                    b.HasOne("GestorEncuestas_MVC.Models.Encuesta", "Encuesta")
                        .WithMany("Respuestas")
                        .HasForeignKey("EncuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorEncuestas_MVC.Models.Pregunta", "Pregunta")
                        .WithMany("Respuestas")
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorEncuestas_MVC.Models.PreguntaOpcion", "SeleccionOpcion")
                        .WithMany("Respuestas")
                        .HasForeignKey("SeleccionOpcionId");

                    b.HasOne("GestorEncuestas_MVC.Models.Usuario", "Usuario")
                        .WithMany("Respuestas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encuesta");

                    b.Navigation("Pregunta");

                    b.Navigation("SeleccionOpcion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.RespuestaOpcion", b =>
                {
                    b.HasOne("GestorEncuestas_MVC.Models.PreguntaOpcion", "Opcion")
                        .WithMany("RespuestasOpciones")
                        .HasForeignKey("OpcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorEncuestas_MVC.Models.Respuesta", "Respuesta")
                        .WithMany("RespuestasOpciones")
                        .HasForeignKey("RespuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opcion");

                    b.Navigation("Respuesta");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Usuario", b =>
                {
                    b.HasOne("GestorEncuestas_MVC.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Encuesta", b =>
                {
                    b.Navigation("Preguntas");

                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Pregunta", b =>
                {
                    b.Navigation("Opciones");

                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.PreguntaOpcion", b =>
                {
                    b.Navigation("Respuestas");

                    b.Navigation("RespuestasOpciones");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Respuesta", b =>
                {
                    b.Navigation("RespuestasOpciones");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("GestorEncuestas_MVC.Models.Usuario", b =>
                {
                    b.Navigation("EncuestasCreadas");

                    b.Navigation("Respuestas");
                });
#pragma warning restore 612, 618
        }
    }
}
